{
  "name": "Microservices E-Commerce Platform",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "."
  },
  
  // Features to install
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "extensions": [
        // Python Development
        "ms-python.python",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-python.pylint",
        
        // JavaScript/TypeScript Development
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",
        "ms-vscode.vscode-eslint",
        
        // Docker Development
        "ms-azuretools.vscode-docker",
        
        // API Development
        "humao.rest-client",
        "42Crunch.vscode-openapi",
        
        // General Development
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-vscode.hexeditor",
        "streetsidesoftware.code-spell-checker",
        
        // Git
        "mhutchie.git-graph",
        "eamodio.gitlens"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/bin/python",
        "python.formatting.provider": "black",
        "python.linting.enabled": true,
        "python.linting.flake8Enabled": true,
        "python.testing.pytestEnabled": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "[python]": {
          "editor.formatOnSave": true,
          "editor.defaultFormatter": "ms-python.black-formatter"
        },
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[typescriptreact]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    3000,  // Next.js frontend
    8000,  // API Gateway
    8001,  // Auth Service
    8002,  // Product Service
    8003,  // Order Service
    5432,  // PostgreSQL (if used)
    6379   // Redis (if used)
  ],

  // Port attributes
  "portsAttributes": {
    "3000": {
      "label": "Frontend (Next.js)",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "API Gateway",
      "onAutoForward": "notify"
    },
    "8001": {
      "label": "Auth Service",
      "onAutoForward": "silent"
    },
    "8002": {
      "label": "Product Service", 
      "onAutoForward": "silent"
    },
    "8003": {
      "label": "Order Service",
      "onAutoForward": "silent"
    }
  },

  // Enable Docker-in-Docker
  "runArgs": ["--privileged"],
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "echo 'Development environment ready! ðŸš€'",

  // Connect as the vscode user
  "remoteUser": "vscode",

  // Environment variables
  "containerEnv": {
    "PYTHONDONTWRITEBYTECODE": "1",
    "PYTHONUNBUFFERED": "1",
    "NODE_ENV": "development"
  }
}
